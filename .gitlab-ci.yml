variables:
  DOCKER_REGISTRY: $CI_REGISTRY
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  DOCKER_TAG: $CI_COMMIT_SHA
  N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
  N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
  N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
  N8N_HOST: "n8n.sophosic.ai"
  N8N_PROTOCOL: "https"
  N8N_PORT: "443"
  WEBHOOK_URL: "https://api.sophosic.ai/"

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: always
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - when: never

services:
  - name: docker:20.10.16-dind
    command: ["--tls=false"]

stages:
  - build
  - deploy

build:
  stage: build
  image: docker:20.10.16
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $DOCKER_IMAGE:latest || true
    - docker build --cache-from $DOCKER_IMAGE:latest -t $DOCKER_IMAGE:$DOCKER_TAG -t $DOCKER_IMAGE:latest .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_IMAGE:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
  tags:
    - docker

deploy:
  stage: deploy
  before_script:
    - docker info || (echo "Docker not available on host" && exit 1)
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $DOCKER_IMAGE:$DOCKER_TAG
    - docker stop n8n || true
    - docker rm n8n || true
    - |
      docker run -d --name n8n \
        --restart unless-stopped \
        -p 9080:9080 \
        -e N8N_BASIC_AUTH_ACTIVE=true \
        -e N8N_BASIC_AUTH_USER='$N8N_BASIC_AUTH_USER' \
        -e N8N_BASIC_AUTH_PASSWORD='$N8N_BASIC_AUTH_PASSWORD' \
        -e N8N_ENCRYPTION_KEY='$N8N_ENCRYPTION_KEY' \
        -e N8N_HOST='$N8N_HOST' \
        -e N8N_PROTOCOL='$N8N_PROTOCOL' \
        -e N8N_PORT='$N8N_PORT' \
        -e WEBHOOK_URL='$WEBHOOK_URL' \
        -v n8n_data:/home/node/.n8n \
        $DOCKER_IMAGE:$DOCKER_TAG
    - docker ps | grep n8n || exit 1
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
  environment:
    name: production
    url: https://n8n.sophosic.ai
  tags:
    - docker
